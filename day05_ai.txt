1. (일반적)알고리즘이란?
	- 문제나 과제를 해결하기 위한 처리 절차를 구체적인 순서로 표현한 아이디어 또는 생각
	- 알고리즘 자체는 일상생활에서도 많이 이용된 ex)요리 레시피, 음악 악보, 가전제품 사용설명서 등
	- 문자, 기호, 일러스트 등으로 나타냄

2. 알고리즘과 프로그램
	- 알고리즘을 프로그래밍 언어를 기술하면 프로그램이 된다.
	- 프로그래밍 언어(파이썬, 자바, 씨 등)는 컴퓨터에 지시하기 위한 인공언어이다.

3. 프로그램 작성에서의 알고리즘
	- 프로그램 작성은 기획, 설계(*), 프로그래밍, 디버그로 진행한다.
	- 알고리즘은 설계 단계에서 필요하다.

4. 좋은 알고리즘이란?
	- 알기 쉽다.(쉬운 이해)
	- 속도가 빠르다.
	- 효율적이다.(메모리를 적게 사용한다.)
	- 재이용이 쉽다.(객체지향프로그래밍)(범용성이 좋다)

5. 왜 알고리즘을 공부해야 하나?
	- 좋은 프로그램을 만들기 위해(빠르고, 효율적, 범용성이 좋은)
	- 프로그램의 좋고 나쁨을 판단하기 위해
	- 프로그램 작성 과정 전체를 효율화하기 위해
	- 프로그램 기술을 향상시키기 위해

6. 알고리즘의 조건
	- 정확한 결과를 얻을 수 있어야 한다.(알고리즘은 문제나 과제를 해결하기 위한 절차)
	- 반드시 종료되어야 한다.(중간 처리나 절차가 잘못만들어지면 영원히 끝나지 않는다.)

7. 알고리즘의 기본형 3가지
	- 순차 구조 : 처음부터 순서대로 처리하는 절차
		ex) 심부름
			1. 슈퍼마켓에 간다.
			2. 라면을 산다.
			3. 집으로 돌아온다.
		*실행을 원하는 처리를 위에서부터 순서대로 작성
		*알고리즘 중에서도 가장많이 사용된다.
	- 선택 구조 : 조건식으로 판단해 실행할 절차를 전환하는 구조
	- 반복 구조 : 조건을 만족하는 동안 같은 처리를 반복하는 절차

*주피터에 그림파일을 넣을려면 cell 형식을 markdown으로 바꿔야한다.

[의사 코드 pseudo code] *사람이 이해하기 위한 목적인 거짓 코드
1. 순차구조
	- 슈퍼마켓을 간다.
	- 라면을 산다.
	- 집으로 돌아온다.
2. 선택구조
	- 슈퍼마켓을 간다.
	- 라면이 있나?
		라면을 산다
		---------------------
		떡을 산다
	- 집으로 돌아온다.
3. 반복구조
	- 슈퍼마켓에 간다
	- 라면이 있나?
		라면을 산다
		---------------------
		떡을 산다
	- 거스름 돈이 500원 보다 많다
		붕어빵을 산다
	- 집으로 돌아온다.
--------------------------------------------------------------------------------------------------------------------
[function]
1. 함수란?
	- 수학에서의 함수와 유사
	ex) 딸기(input) -> 믹서기(function) -> 딸기주스(output)
	    바나나(input) -> 믹서기(function) -> 바나나주스(output)
	    사과(input) -> 믹서기(function) -> 사과주스(output)

2. 기본형
	def 함수명(매개변수) :
		수행
	- 매개변수 자리는 비워도 된다.
	- 함수를 선언할 때 매개변수의 개수와 함수를 호출할 때 매개변수의 개수가 같아야한다.
	  적어도 안되고 많아도 안된다.
3. 가변 매개 변수
4. return
	- function의 결과
5. 재귀 함수
	- return값으로 자기자신의 함수를 가지는 함수
	- 권장하지 않는 함수 *뽐내기용 함수
	- 개발자들 사이에서는 재귀함수를 절대 사용하지 말자라는 의견도 있다
	- 하지만 가독성이 좋고 코드가 간결하고 멋스러워 보이는 장점도 있다.
6. 튜플과 함수
	- 튜플은 함수의 리턴에 많이 사용된다.
	- 함수의 리턴에 튜플을 사용하게 되면 여러개의 값을 리턴하고 할당 할 수 있기 때문이다.
		
